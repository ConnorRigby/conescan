name: build

on:
  push:
    #

jobs:
  Windows:
    runs-on: windows-latest
    steps:
      - uses: microsoft/setup-msbuild@v1.1

      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Fetch GLFW
        shell: powershell
        run: |
          Invoke-WebRequest -Uri 'https://github.com/glfw/glfw/releases/download/3.3.8/glfw-3.3.8.bin.WIN32.zip' -OutFile 'glfw-3.3.8.bin.WIN32.zip'
          Expand-Archive -Path 'glfw-3.3.8.bin.WIN32.zip' -DestinationPath 'lib/glfw'
          Invoke-WebRequest -Uri 'https://github.com/glfw/glfw/releases/download/3.3.8/glfw-3.3.8.bin.WIN64.zip' -OutFile 'glfw-3.3.8.bin.WIN64.zip'
          Expand-Archive -Path 'glfw-3.3.8.bin.WIN64.zip' -DestinationPath 'lib/glfw'


      - name: Fetch GLEW
        shell: powershell
        run: |
          Invoke-WebRequest -Uri 'https://downloads.sourceforge.net/project/glew/glew/2.1.0/glew-2.1.0-win32.zip' -OutFile 'glew-2.1.0-win32.zip' -UserAgent "Wget"
          Expand-Archive -Path 'glew-2.1.0-win32.zip' -DestinationPath 'lib/glew'

      - name: Patch NativeFileDialog
        working-directory: lib\nativefiledialog
        run: git apply ../0001-build-update-vs-solution-to-vs2022.patch
        
      - name: Build ConeScan Debug
        run: msbuild conescan.sln /p:Configuration="Debug" /p:PlatformTarget=x86 /p:Platform=x86

      - uses: actions/upload-artifact@v3
        with:
          name: Conescan-Win32-Debug
          path: Debug

      - name: Build ConeScan Release
        run: msbuild conescan.sln /p:Configuration="Release" /p:PlatformTarget=x86 /p:Platform=x86

      - uses: actions/upload-artifact@v3
        with:
          name: Conescan-Win32-Release
          path: Release

  Emscripten:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install Dependencies
        run: |
          wget -q https://github.com/emscripten-core/emsdk/archive/master.tar.gz
          tar -xvf master.tar.gz
          emsdk-master/emsdk update
          emsdk-master/emsdk install latest
          emsdk-master/emsdk activate latest
      - name: Build example_emscripten_opengl3
        run: |
          pushd emsdk-master
          source ./emsdk_env.sh
          popd
          make TARGET=wasm
      - name: Archive artifact
        shell: bash
        run: |
          tar \
            --dereference --hard-dereference \
            --directory emscripten/web \
            -cvf /tmp/artifact.tar \
            --exclude=.git \
            --exclude=.github \
            .
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: /tmp/artifact.tar
          retention-days: 7

  deploy:
    # Add a dependency to the build job
    needs: Emscripten

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest

    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
